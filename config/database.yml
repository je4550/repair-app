# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: storage/development.sqlite3

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: storage/test.sqlite3


# Staging environment uses PostgreSQL
staging:
  primary:
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    database: <%= ENV.fetch("DATABASE_NAME", "autoplanner_staging") %>
    username: <%= ENV.fetch("DATABASE_USERNAME", "autoplanner") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD", "") %>
    host: <%= ENV.fetch("DATABASE_HOST", "localhost") %>
    port: <%= ENV.fetch("DATABASE_PORT", 5432) %>
  cache:
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    database: <%= ENV.fetch("DATABASE_NAME", "autoplanner_staging") %>_cache
    username: <%= ENV.fetch("DATABASE_USERNAME", "autoplanner") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD", "") %>
    host: <%= ENV.fetch("DATABASE_HOST", "localhost") %>
    port: <%= ENV.fetch("DATABASE_PORT", 5432) %>
    migrations_paths: db/cache_migrate
  queue:
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    database: <%= ENV.fetch("DATABASE_NAME", "autoplanner_staging") %>_queue
    username: <%= ENV.fetch("DATABASE_USERNAME", "autoplanner") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD", "") %>
    host: <%= ENV.fetch("DATABASE_HOST", "localhost") %>
    port: <%= ENV.fetch("DATABASE_PORT", 5432) %>
    migrations_paths: db/queue_migrate
  cable:
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    database: <%= ENV.fetch("DATABASE_NAME", "autoplanner_staging") %>_cable
    username: <%= ENV.fetch("DATABASE_USERNAME", "autoplanner") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD", "") %>
    host: <%= ENV.fetch("DATABASE_HOST", "localhost") %>
    port: <%= ENV.fetch("DATABASE_PORT", 5432) %>
    migrations_paths: db/cable_migrate

# Production environment uses PostgreSQL
production:
  primary:
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    database: <%= ENV.fetch("DATABASE_NAME", "autoplanner_production") %>
    username: <%= ENV.fetch("DATABASE_USERNAME", "autoplanner") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD", "") %>
    host: <%= ENV.fetch("DATABASE_HOST", "localhost") %>
    port: <%= ENV.fetch("DATABASE_PORT", 5432) %>
  cache:
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    database: <%= ENV.fetch("DATABASE_NAME", "autoplanner_production") %>_cache
    username: <%= ENV.fetch("DATABASE_USERNAME", "autoplanner") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD", "") %>
    host: <%= ENV.fetch("DATABASE_HOST", "localhost") %>
    port: <%= ENV.fetch("DATABASE_PORT", 5432) %>
    migrations_paths: db/cache_migrate
  queue:
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    database: <%= ENV.fetch("DATABASE_NAME", "autoplanner_production") %>_queue
    username: <%= ENV.fetch("DATABASE_USERNAME", "autoplanner") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD", "") %>
    host: <%= ENV.fetch("DATABASE_HOST", "localhost") %>
    port: <%= ENV.fetch("DATABASE_PORT", 5432) %>
    migrations_paths: db/queue_migrate
  cable:
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    database: <%= ENV.fetch("DATABASE_NAME", "autoplanner_production") %>_cable
    username: <%= ENV.fetch("DATABASE_USERNAME", "autoplanner") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD", "") %>
    host: <%= ENV.fetch("DATABASE_HOST", "localhost") %>
    port: <%= ENV.fetch("DATABASE_PORT", 5432) %>
    migrations_paths: db/cable_migrate
